## This file contains configurable parameters for the master.

## Machines where master will be running
master_host=blue

## This is the port where master will be listening to
master_listening_port=8050

## Master server connection backlogs
master_server_listening_q_depth=40

## Number of logical threads to schedule tasks
num_ray_scheduling_master_threads=8

## Q depth of the scheduling threads
scheduling_thread_q_depth=128

## Different scheduling policy: static => 0, dynamic => 1
## static : The amount of work which will be assigned to each worker are predefined.
## dynamic : The amount of work which will be assigned to each worker are dynamic.
scheduling_policy=1

## different static scheduling policy:  sequential => 0, random => 1,
## sequential: A worker is assigned to sequential chunk of pixels for all the CPU threads.
## random: A worker is assigned to random pixel chunks.
static_scheduling_policy=1

## different dynamic schedule pixel chunk refill allocation policy after the each pipeline
## completes first iteration, fixed  => 0, worker capability driven  => 1,
## fixed chunk: Each will be getting same pixel chunk size.
## worker capability driven :  Pipelines of a slow worker will get less, pipelines of a fast worker will get more
dynamic_schedule_pixel_chunk_refill_allocation_policy=1

dynamic_schedule_initial_pixel_chunk_max=1024
dynamic_schedule_initial_pixel_chunk_max_throttle_factor=2
dynamic_schedule_pixel_chunk_decay=10000
dynamic_schedule_pixel_chunk_min=128

## Worker should read this value and report time taken to produce known scene..
## Ideally, it would be best for the master to send down the request. But we are
## doing it this way to help ease things out a bit
known_scene_name="random"
known_scene_nx=256
known_scene_ny=256
known_scene_ns=100
